{{- if .Values.manifests.deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.deployment.labels | nindent 6 }}
  strategy:
    # keep N instances up even when upgrading, upgrade one by one
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configs-configmap.yaml") . | sha256sum }}
{{- if .Values.manifests.certs_secret }}
        checksum/secret: {{ include (print $.Template.BasePath "/certs-secret.yaml") . | sha256sum }}
{{- end }}
        {{- toYaml .Values.deployment.podAnnotations | nindent 8 }}
      labels:
        {{- toYaml .Values.deployment.labels | nindent 8 }}
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: traefik
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        - containerPort: 8082
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/traefik/
          name: {{ .Values.name }}-configs
          readOnly: true
        - mountPath: /etc/traefik-certs/
          name: {{ .Values.name }}-certs
          readOnly: true
      volumes:
      - name: {{ .Values.name }}-configs
        configMap:
          defaultMode: 420
          name: {{ .Values.name }}-configs
      - name: {{ .Values.name }}-certs
        secret:
          defaultMode: 420
          secretName: {{ .Values.name }}-certs
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
{{- end }}
