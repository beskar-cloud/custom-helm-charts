# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: edge-proxy

image:
  repository: traefik
  tag: v2.9.8
  pullPolicy: IfNotPresent

namespace:
  name: null

deployment:
  replicaCount: 2
  labels:
    app: edge-proxy
  #podAnnotations: {}
  nodeSelector:
    node-role.kubernetes.io/control-plane: ""

service:
  loadBalancerIP:
    enabled: true
    ip: 1.1.1.1
    allocateLoadBalancerNodePorts: true
  clusterIP: null
  selector:
    app: edge-proxy
  type: LoadBalancer

manifests:
  namespace: true
  service: true
  deployment: true
  configs_configmap: true
  certs_secret: true       # assign false if you want to re-use existing secret

certificates: {}
#  ostrava.openstack.cloud.crt: ...
#  ostrava.openstack.cloud.key: ...
#  wildcard.ostrava.openstack.cloud.crt: ...
#  wildcard.ostrava.openstack.cloud.key: ...

configuration:
  traefik-routes.yaml:
    http:
      # edge proxy L7 routes
      routers:
        # keystone ----------------------------------------------------------
        http_keystone: &router_http_keystone
          rule: "Host(`identity.ostrava.openstack.cloud`)"
          service: backend_keystone
          entryPoints: &common-traefik-entrypoints ["secure"]
        https_keystone:
          <<: *router_http_keystone
          tls: {}

        # cinder ------------------------------------------------------------
        http_cinder: &router_http_cinder
          rule: "Host(`volume.ostrava.openstack.cloud`) || Host(`volumev3.ostrava.openstack.cloud`)"
          service: backend_cinder
          entryPoints: *common-traefik-entrypoints
        https_cinder:
          <<: *router_http_cinder
          tls: {}

        # ...

      # edge proxy backend services
      services:
        backend_keystone:
          loadBalancer: &ostack-service-loadbalancer
            passHostHeader: true
            servers:
            - url: "http://keystone-api.openstack.svc.cluster.local:5000"

        backend_cinder:
          loadBalancer:
            <<: *ostack-service-loadbalancer
            servers:
            - url: "http://cinder-api.openstack.svc.cluster.local:8776"

        # ...

    # backend certificates
    tls:
      certificates:
      - certFile: /etc/traefik-certs/...
        keyFile: /etc/traefik-certs/...
      - certFile: /etc/traefik-certs/...
        keyFile: /etc/traefik-certs/...

  traefik.yaml:
    # edge-proxy bound addresses
    entryPoints:
      # HTTP, port 80
      unsecure:
        address: "0.0.0.0:80"
        # http -> https redirect
        http:
          redirections:
            entryPoint:
              to: secure
              scheme: "https"
      # HTTPS, port 443
      secure:
        address: "0.0.0.0:443"
      metrics:
        address: "0.0.0.0:8082"

    # default certificates
    tls:
      stores:
        default:
          minVersion: VersionTLS12
          defaultCertificate:
            certFile: /etc/traefik-certs/...
            keyFile: /etc/traefik-certs/...

    # logging
    log:
      level: INFO
    accessLog: {}

    # internal dashboard
    api:
      dashboard: true
      insecure: true

    # routers + middleware + backends file configuration
    providers:
      file:
        filename: /etc/traefik/traefik-routes.yaml
        watch: true

    metrics:
      prometheus:
        entryPoint: metrics
